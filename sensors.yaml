
#------------------------------------------------------------------------------
# MTA SUBWAY
#------------------------------------------------------------------------------

  - platform: mta_subway
    line:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '6X'
      - '7'
      - '7X'
      - 'A'
      - 'B'
      - 'C'
      - 'D'
      - 'E'
      - 'F'
      - 'FX'
      - 'G'
      - 'J'
      - 'L'
      - 'M'
      - 'N'
      - 'Q'
      - 'R'
      - 'GS'
      - 'FS'
      - 'H'
      - 'SI'
      - 'W'
      - 'Z'

#------------------------------------------------------------------------------
# ZIGBEE2MQTT
#------------------------------------------------------------------------------



  #- platform: "mqtt"
  #  name: "Viacom Weather Link Quality"
  #  state_topic: "viacom/viacom_weather"
  #  availability_topic: "viacom/bridge/state"
  #  icon: "mdi:access-point"
  #  unit_of_measurement: "LQI"
  #  value_template: "{{ value_json.linkquality }}"
  #  json_attributes_topic: "viacom/viacom_weather"

#------------------------------------------------------------------------------
# PRESENCE
#------------------------------------------------------------------------------

 # Work
 #--------------------------------------------
#  - platform: mqtt
#    state_topic: 'presence/viacom/D8:8F:76:D2:23:75'
#    value_template: '{{ value_json.confidence }}'
#    unit_of_measurement: '%'
#    name: 'Mickey iPhone Viacom Presence'

#------------------------------------------------------------------------------
# Room Assistant
#------------------------------------------------------------------------------

 # Mickey
 #--------------------------------------------
 # - platform: mqtt
 #   state_topic: 'room-assistant/sensor/bluetooth-classic-d8-8f-76-d2-23-75/state'
 #   name: 'Mickey Room Presence'

 # Maggie
 #--------------------------------------------
 # - platform: mqtt
 #   state_topic: 'room-assistant/sensor/bluetooth-classic-38-89-2c-1e-b9-98/state'
 #   name: 'Maggie Room Presence'


#------------------------------------------------------------------------------
# Pycelium
#------------------------------------------------------------------------------

#  - platform: "mqtt"
#    name: "Pycelium Temperature"
#    state_topic: "pycelium/temperature"
#    availability_topic: "pycelium/status"
#    icon: "mdi:thermometer"
#    device_class: "temperature"
#    unit_of_measurement: "Â°C"

#  - platform: "mqtt"
#    name: "Pycelium Humidity"
#    state_topic: "pycelium/humidity"
#    availability_topic: "pycelium/status"
#    icon: "mdi:water-percent"
#    device_class: "humidity"
#    unit_of_measurement: "%"

#  - platform: "mqtt"
#    name: "Pycelium CO2"
#    state_topic: "pycelium/co2"
#    availability_topic: "pycelium/status"
#    icon: "mdi:air-filter"
#    unit_of_measurement: "ppm"


#------------------------------------------------------------------------------
# Templates
#------------------------------------------------------------------------------

  #- platform: template
  #  sensors:

      # Airplants Last Watered
      #airplants_last_watered:
      #  value_template: '{{ strptime("2019-06-07", "%Y-%m-%d").date() }}'
      #  entity_id: sensor.date
      #  friendly_name: 'Airplants Last Watered'

      # Airplants Days Since Last Watered
      #airplants_days_since_last_watered:
      #  value_template: '{{ (( as_timestamp(now()) - as_timestamp(strptime(states.sensor.airplants_last_watered.state, "%Y-%m-%d")) ) / 86400 ) | int }}'
      #  entity_id: sensor.date, sensor.airplants_last_watered
      #  friendly_name: "Airplants Days Since Last Watered"
      #  icon_template: >-
      #    {% if states.sensor.airplants_days_since_last_watered.state | int  > 14 %}
      #      mdi:timer-sand-empty
      #    {% else %}
      #      mdi:timer-sand-full
      #    {% endif %}
      #  unit_of_measurement: "Days"
